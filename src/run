#!/bin/bash

# Parameters:
# $1: Directory where file-to-run lives.

function clean {
  # Clean build files, if any
  rm $1/*.class 2> /dev/null
  rm $1/*.out 2> /dev/null
}
clean $1

# Read standard input
STDIN=$(cat -)

# Expected file name
entry_file_name=Solution

# Find first file which matches expected entry
entry_file=$(ls $1 | grep ^${entry_file_name}[.].*$ | head -1)

# Execute entry file with standard input
case $entry_file in
  *.java)
    javac $1/${entry_file}
    echo -e "${STDIN}" | java -cp $1 ${entry_file_name}
    ;;
  *.py)
    echo -e "${STDIN}" | python $1/${entry_file}
    ;;
  *.c)
    gcc $1/${entry_file} -o "$1/${entry_file_name}.out"
    echo -e "${STDIN}" | "$1/${entry_file_name}.out"
    ;;
  *.cpp)
    g++ $1/${entry_file} -o "$1/${entry_file_name}.out"
    echo -e "${STDIN}" | "$1/${entry_file_name}.out"
esac

clean $1
